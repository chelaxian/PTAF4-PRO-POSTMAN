{
	"info": {
		"_postman_id": "a5de330f-30aa-4682-a2ee-bd5d34cb7ab1",
		"name": "Get IDs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10313775"
	},
	"item": [
		{
			"name": "Get tenants IDs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// –ü–∞—Ä—Å–∏–º JSON-–æ—Ç–≤–µ—Ç\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ —Å–ø–∏—Å–æ–∫ —Ç–µ–Ω–∞–Ω—Ç–æ–≤\r",
							"if (jsonData.items && jsonData.items.length > 0) {\r",
							"    console.log(\"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–Ω–∞–Ω—Ç–æ–≤:\", jsonData.items.length);\r",
							"\r",
							"    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Ç–µ–Ω–∞–Ω—Ç–∞–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è\r",
							"    jsonData.items.forEach((tenant, index) => {\r",
							"        let tenantVarName = `tenant-${index + 1}_id`; // tenant-1_id, tenant-2_id, ...\r",
							"        pm.environment.set(tenantVarName, tenant.id);\r",
							"        console.log(`‚úÖ ${tenantVarName} —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${tenant.id}`);\r",
							"    });\r",
							"\r",
							"    console.log(\"‚úÖ –í—Å–µ ID —Ç–µ–Ω–∞–Ω—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.\");\r",
							"} else {\r",
							"    console.log(\"‚ö†Ô∏è –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç —Å–ø–∏—Å–∫–∞ —Ç–µ–Ω–∞–Ω—Ç–æ–≤!\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true,
					"host": true
				},
				"protocolVersion": "auto",
				"followRedirects": false,
				"disableUrlEncoding": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					},
					{
						"key": "authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/ptaf/v4/auth/account/tenants",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ptaf",
						"v4",
						"auth",
						"account",
						"tenants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get policies IDs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–∫–µ–Ω: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É access_token_target_tenant, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç ‚Äî –±–µ—Ä—ë–º access_token\r",
							"var token = pm.environment.get(\"access_token_target_tenant\") || pm.environment.get(\"access_token\");\r",
							"\r",
							"if (!token) {\r",
							"    console.log(\"‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!\");\r",
							"    pm.environment.unset(\"all_policy_id\"); // –ß–∏—Å—Ç–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∞\r",
							"} else {\r",
							"    console.log(\"üîê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω:\", token);\r",
							"    pm.variables.set(\"token\", token);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// –ü–∞—Ä—Å–∏–º JSON-–æ—Ç–≤–µ—Ç\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ø–∏—Å–æ–∫ policy templates\r",
							"if (jsonData.items && jsonData.items.length > 0) {\r",
							"    console.log(\"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ Policy Templates:\", jsonData.items.length);\r",
							"\r",
							"    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∏ –∏–º–µ–Ω\r",
							"    let policyList = jsonData.items.map(policy => `${policy.id} - ${policy.name}`);\r",
							"\r",
							"    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è\r",
							"    pm.environment.set(\"all_policy_id\", policyList.join(\"\\n\"));\r",
							"\r",
							"    console.log(\"‚úÖ –í—Å–µ Policy ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ all_policy_id:\\n\", policyList.join(\"\\n\"));\r",
							"} else {\r",
							"    console.log(\"‚ö†Ô∏è –û—à–∏–±–∫–∞: –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç policy templates!\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true,
					"user-agent": true,
					"accept": true,
					"accept-encoding": true,
					"connection": true
				},
				"protocolVersion": "auto",
				"followRedirects": false,
				"disableUrlEncoding": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					},
					{
						"key": "accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/ptaf/v4/config/policies/templates/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ptaf",
						"v4",
						"config",
						"policies",
						"templates",
						"user"
					]
				}
			},
			"response": [
				{
					"name": "Get policies IDs",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ptaf/v4/config/policies/templates/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ptaf",
								"v4",
								"config",
								"policies",
								"templates",
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "Date",
							"value": "Tue, 11 Feb 2025 15:41:32 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-EVENT-ID",
							"value": "HTTP_GET-5806290c-4fb3-43c3-a0b2-7f70a73911c2"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "1; mode=block;"
						},
						{
							"key": "X-Content-Security-Policy",
							"value": "allow 'self'; frame-ancestors 'none';"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self'; script-src 'self' 'unsafe-eval' mc.yandex.ru 'sha256-RUA3pbYGVSz2j++Vye47WZouK5UMg5yKuyszwWnFqSE='; img-src 'self' data: mc.yandex.ru; style-src 'self' 'unsafe-inline'; font-src 'self'; frame-src 'self'; object-src 'none'; connect-src 'self' mc.yandex.ru;"
						},
						{
							"key": "X-WebKit-CSP",
							"value": "allow 'self';"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"items\": [\n        {\n            \"templates\": [\n                \"cf0a2d96-1907-4fe4-acd5-041512f0457e\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"20a51c51-3012-4a66-bbbc-5155a232017a\",\n            \"name\": \"PHP (user)\"\n        },\n        {\n            \"templates\": [\n                \"628cf2ca-517d-48fc-9126-88cecdd34847\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"3f607b52-0b60-4349-bc29-239d3bf20b28\",\n            \"name\": \"Bitrix (user)\"\n        },\n        {\n            \"templates\": [\n                \"210063b6-3b6c-4428-8ce8-20bfb6c1981a\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"56b57ded-d2ee-46e2-a343-507f7b929fb0\",\n            \"name\": \"Apache Struts (user)\"\n        },\n        {\n            \"templates\": [\n                \"fa53bb69-3bde-42c4-b95b-0873d64b8b24\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"5ef924d9-2670-4da3-baab-7cd7bae5a16c\",\n            \"name\": \"LAMP (PHP, Apache, MySQL) (user)\"\n        },\n        {\n            \"templates\": [\n                \"6cae6e76-aab0-415a-b068-26af33cb07d2\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"731500a1-727f-4e50-acf4-6228136d31c3\",\n            \"name\": \"ASP.NET (user)\"\n        },\n        {\n            \"templates\": [\n                \"32203cd2-2f97-4bfc-9250-28c509205796\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"7dbabd7c-d91f-4cba-b532-ac6418d2f92f\",\n            \"name\": \"Java (user)\"\n        },\n        {\n            \"templates\": [\n                \"2ac98589-85ed-4e81-94ea-d6cc05396683\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"bdc5110f-decf-45ba-80dc-c299be530f5d\",\n            \"name\": \"Joomla CMS (user)\"\n        },\n        {\n            \"templates\": [\n                \"5f5f3e10-02f2-40d7-a699-7bb697b02e93\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"d2eac5cf-8d2b-4ab2-8b9e-632f7d345c97\",\n            \"name\": \"Node.js (user)\"\n        },\n        {\n            \"templates\": [\n                \"352a4409-30a2-4281-bc84-5bb5d65f95ba\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"d4eba1db-1dac-42c3-87d4-fcbb4ee0f106\",\n            \"name\": \"Default Template (user)\"\n        },\n        {\n            \"templates\": [\n                \"20a3b1c2-7025-4e75-9ae1-6a48da8a78a7\"\n            ],\n            \"type\": \"USER_POLICY\",\n            \"id\": \"d51aeb96-35df-42bd-8ddd-2ab8b1d4ae03\",\n            \"name\": \"Microsoft Exchange (user)\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get rules IDs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–∫–µ–Ω: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É access_token_target_tenant, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç ‚Äî –±–µ—Ä—ë–º access_token\r",
							"var token = pm.environment.get(\"access_token_target_tenant\") || pm.environment.get(\"access_token\");\r",
							"\r",
							"if (!token) {\r",
							"    console.log(\"‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!\");\r",
							"    pm.environment.unset(\"all_policy_id\"); // –ß–∏—Å—Ç–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∞\r",
							"} else {\r",
							"    console.log(\"üîê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω:\", token);\r",
							"    pm.variables.set(\"token\", token);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// –ü–∞—Ä—Å–∏–º JSON-–æ—Ç–≤–µ—Ç\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª (rules)\r",
							"if (jsonData.items && jsonData.items.length > 0) {\r",
							"    console.log(\"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∞–≤–∏–ª:\", jsonData.items.length);\r",
							"\r",
							"    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∏ –∏–º–µ–Ω –ø—Ä–∞–≤–∏–ª\r",
							"    let rulesList = jsonData.items.map(rule => `${rule.id} - ${rule.name}`);\r",
							"\r",
							"    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è\r",
							"    pm.environment.set(\"all_rules_id\", rulesList.join(\"\\n\"));\r",
							"\r",
							"    console.log(\"‚úÖ –í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ all_rules_id:\\n\", rulesList.join(\"\\n\"));\r",
							"} else {\r",
							"    console.log(\"‚ö†Ô∏è –û—à–∏–±–∫–∞: –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª!\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"protocolVersion": "auto",
				"followRedirects": false,
				"disableUrlEncoding": true,
				"disabledSystemHeaders": {
					"accept-encoding": true,
					"connection": true,
					"accept": true,
					"user-agent": true,
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					},
					{
						"key": "accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/ptaf/v4/config/policies/templates/user/{{target_policy_id}}/rules",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ptaf",
						"v4",
						"config",
						"policies",
						"templates",
						"user",
						"{{target_policy_id}}",
						"rules"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get actions IDs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–∫–µ–Ω: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É access_token_target_tenant, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç ‚Äî –±–µ—Ä—ë–º access_token\r",
							"var token = pm.environment.get(\"access_token_target_tenant\") || pm.environment.get(\"access_token\");\r",
							"\r",
							"if (!token) {\r",
							"    console.log(\"‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!\");\r",
							"    pm.environment.unset(\"all_policy_id\"); // –ß–∏—Å—Ç–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∞\r",
							"} else {\r",
							"    console.log(\"üîê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω:\", token);\r",
							"    pm.variables.set(\"token\", token);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// –ü–∞—Ä—Å–∏–º JSON-–æ—Ç–≤–µ—Ç\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π\r",
							"if (jsonData.items && jsonData.items.length > 0) {\r",
							"    console.log(\"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–π:\", jsonData.items.length);\r",
							"\r",
							"    let actionList = [];\r",
							"    let actionFormattedList = [];\r",
							"    \r",
							"    // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ Global\r",
							"    let logToDbId = null;\r",
							"    let blockId = null;\r",
							"    let logToSiemId = null;\r",
							"\r",
							"    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Å–ø–∏—Å–∫—É –¥–µ–π—Å—Ç–≤–∏–π\r",
							"    jsonData.items.forEach(action => {\r",
							"        let actionId = action.id;\r",
							"        let actionName = action.name;\r",
							"        \r",
							"        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É \"ID - name\"\r",
							"        let actionEntry = `${actionId} - ${actionName}`;\r",
							"        actionList.push(actionEntry);\r",
							"        actionFormattedList.push(actionEntry);\r",
							"\r",
							"        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω—É–∂–Ω—ã–µ ID –≤ Global\r",
							"        if (actionName === \"Log to db\") {\r",
							"            logToDbId = actionId;\r",
							"        }\r",
							"        if (actionName === \"Block\") {\r",
							"            blockId = actionId;\r",
							"        }\r",
							"        if (actionName === \"Send to SIEM\") {\r",
							"            logToSiemId = actionId;\r",
							"        }\r",
							"    });\r",
							"\r",
							"    // –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å\r",
							"    console.log(\"üîπ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\\n\" + actionList.join(\"\\n\"));\r",
							"\r",
							"    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤ environment –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (—Ñ–æ—Ä–º–∞—Ç: ID - name)\r",
							"    pm.environment.set(\"all_action_id\", actionFormattedList.join(\"\\n\"));\r",
							"    console.log(\"‚úÖ –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ all_action_id (—Ñ–æ—Ä–º–∞—Ç: ID - name)\");\r",
							"\r",
							"    // –û–±–Ω–æ–≤–ª—è–µ–º Global –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—ã–µ ID\r",
							"    if (logToDbId) {\r",
							"        pm.globals.set(\"action_log_to_db_id\", logToDbId);\r",
							"        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ Global –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è action_log_to_db_id: ${logToDbId}`);\r",
							"    }\r",
							"    if (blockId) {\r",
							"        pm.globals.set(\"action_block_id\", blockId);\r",
							"        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ Global –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è action_block_id: ${blockId}`);\r",
							"    }\r",
							"    if (logToSiemId) {\r",
							"        pm.globals.set(\"action_log_to_siem_id\", logToSiemId);\r",
							"        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ Global –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è action_log_to_siem_id: ${logToSiemId}`);\r",
							"    }\r",
							"} else {\r",
							"    console.log(\"‚ö†Ô∏è –û—à–∏–±–∫–∞: –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π!\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"protocolVersion": "auto",
				"followRedirects": false,
				"disableUrlEncoding": true,
				"disabledSystemHeaders": {
					"connection": true,
					"accept-encoding": true,
					"accept": true,
					"user-agent": true,
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/ptaf/v4/config/actions",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ptaf",
						"v4",
						"config",
						"actions"
					]
				}
			},
			"response": []
		}
	]
}
